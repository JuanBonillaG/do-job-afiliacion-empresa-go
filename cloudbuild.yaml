steps:
  # Generación de archivos ms-aihub-reportarsiniestro
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
    - '-c'
    - |
      echo "us-east1" > region.txt
      echo "repo-do-job-afiliacion-empresa-go" > repo_artifact.txt
      echo "do-job-afiliacion-empresa-go" > image_repo.txt
      echo "do-job-afiliacion-empresa-go" > service_name.txt
      echo "$(cat region.txt)-docker.pkg.dev/$PROJECT_ID/$(cat repo_artifact.txt)/$(cat image_repo.txt):latest" > image_name.txt


  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
    - '-c'
    - |
      if gcloud artifacts repositories describe "$(cat repo_artifact.txt)" --location="$(cat region.txt)" >/dev/null 2>&1; then
        echo "Repositorio ya existe, no se hace nada."
      else
        echo "Creando repositorio..."
        gcloud artifacts repositories create "$(cat repo_artifact.txt)" --location "$(cat region.txt)" --description "Repo job consulta Afilicacion de empresa DataOps" --repository-format="DOCKER"
      fi
  # Construcción de la imagen Docker y push a Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
    - '-c'
    - |
      docker build -t "$(cat image_name.txt)" .
      docker push "$(cat image_name.txt)"

  # Despliegue en Cloud Run --memory 1Gi \
  # --service-account sb-xops-prod@appspot.gserviceaccount.com \
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
    - '-c'
    - |
      gcloud run jobs deploy "$(cat service_name.txt)" \
        --image "$(cat image_name.txt)" \
        --region "$(cat region.txt)" \
        --labels billing-tags=api_polizas_afiliacion_empresa

options:
  logging: CLOUD_LOGGING_ONLY